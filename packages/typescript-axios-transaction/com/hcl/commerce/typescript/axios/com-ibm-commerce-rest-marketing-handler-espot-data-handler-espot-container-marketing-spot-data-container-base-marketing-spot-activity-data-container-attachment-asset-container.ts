/* tslint:disable */
/* eslint-disable */
/**
 * HCL Commerce Services - Account and Contract
 * These services provide APIs to manage accounts and contracts.  a contract is an agreement that represents the terms and conditions that apply to a transaction. An account is a relationship between the merchant and the financial institution that processes transactions for that merchant.
 *
 * The version of the OpenAPI document: 9.1.6
 * 
 * (C) Copyright HCL Technologies Limited 2021
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Structure containing the attachment asset.
 * @export
 * @interface ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer
 */
export interface ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer {
    /**
     * Language ID for the language-specific fields in this input file.
     * @type {Array<string>}
     * @memberof ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer
     */
    attachmentAssetLanguage?: Array<string>;
    /**
     * Attribute to indicate whether this attachment is a local attachment.
     * @type {string}
     * @memberof ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer
     */
    attachmentLocalAsset?: string;
    /**
     * MIME type of the attachment asset.
     * @type {string}
     * @memberof ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer
     */
    attachmentAssetMimeType?: string;
    /**
     * Root directory for the attachment asset.
     * @type {string}
     * @memberof ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer
     */
    attachmentAssetRootDirectory?: string;
    /**
     * Directory path to the attachment asset.
     * @type {string}
     * @memberof ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer
     */
    attachmentAssetDirectoryPath?: string;
    /**
     * Identifier of the attachment asset.
     * @type {string}
     * @memberof ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer
     */
    attachmentAssetId?: string;
    /**
     * External identifier of the store that owns the attachment asset.
     * @type {string}
     * @memberof ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer
     */
    attachmentAssetStoreExternalId?: string;
    /**
     * Identifier of the store that owns the attachment asset.
     * @type {string}
     * @memberof ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer
     */
    attachmentAssetStoreId?: string;
    /**
     * Relative path of the attachment asset.
     * @type {string}
     * @memberof ComIbmCommerceRestMarketingHandlerESpotDataHandlerESpotContainerMarketingSpotDataContainerBaseMarketingSpotActivityDataContainerAttachmentAssetContainer
     */
    attachmentAssetPath?: string;
}


